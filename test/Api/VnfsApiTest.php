<?php
/**
 * VnfsApiTest
 * PHP version 5
 *
 * @category Class
 * @package  tpn
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Telstra Programmable Network API
 *
 * Telstra Programmable Network is a self-provisioning platform that allows its users to create on-demand connectivity services between multiple end-points and add various network functions to those services. Programmable Network enables to connectivity to a global ecosystem of networking services as well as public and private cloud services. Once you are connected to the platform on one or more POPs (points of presence), you can start creating those services based on the use case that you want to accomplish. The Programmable Network API is available to all customers who have registered to use the Programmable Network. To register, please contact your account representative.
 *
 * OpenAPI spec version: 2.4.2
 * Contact: pnapi-support@team.telstra.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 3.1.2
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace tpn;

use \tpn\Configuration;
use \tpn\ApiException;
use \tpn\ObjectSerializer;

/**
 * VnfsApiTest Class Doc Comment
 *
 * @category Class
 * @package  tpn
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class VnfsApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for bmsBackup
     *
     * Create backup of specified VNF.
     *
     */
    public function testBmsBackup()
    {
    }

    /**
     * Test case for bmsBackupDelete
     *
     * Delete specified backup.
     *
     */
    public function testBmsBackupDelete()
    {
    }

    /**
     * Test case for bmsBackupGet
     *
     * Get information about the specified backup.
     *
     */
    public function testBmsBackupGet()
    {
    }

    /**
     * Test case for bmsBackupRestore
     *
     * Restore VNF from backup.
     *
     */
    public function testBmsBackupRestore()
    {
    }

    /**
     * Test case for bmsBackupVnf
     *
     * List backups.
     *
     */
    public function testBmsBackupVnf()
    {
    }

    /**
     * Test case for bmsBackupVnfDelete
     *
     * Delete multiple backups.
     *
     */
    public function testBmsBackupVnfDelete()
    {
    }

    /**
     * Test case for inventoryVnfVport
     *
     * Create VNF VPort.
     *
     */
    public function testInventoryVnfVport()
    {
    }

    /**
     * Test case for inventoryVnfendpoint
     *
     * Instantiate Virtual Network Function.
     *
     */
    public function testInventoryVnfendpoint()
    {
    }

    /**
     * Test case for marketplaceImage
     *
     * List images in the Marketplace.
     *
     */
    public function testMarketplaceImage()
    {
    }

    /**
     * Test case for marketplaceImageAdd
     *
     * Add specified image to \"My Images\".
     *
     */
    public function testMarketplaceImageAdd()
    {
    }

    /**
     * Test case for marketplaceImageImageid
     *
     * Get information about the specified image.
     *
     */
    public function testMarketplaceImageImageid()
    {
    }

    /**
     * Test case for marketplaceImageMyImages
     *
     * List images in \"My Images\".
     *
     */
    public function testMarketplaceImageMyImages()
    {
    }

    /**
     * Test case for marketplaceImageRemove
     *
     * Remove specified image from \"My Images\".
     *
     */
    public function testMarketplaceImageRemove()
    {
    }

    /**
     * Test case for vnf
     *
     * Get status information about the specified VNF.
     *
     */
    public function testVnf()
    {
    }

    /**
     * Test case for vnfReboot
     *
     * Reboot the specified VNF.
     *
     */
    public function testVnfReboot()
    {
    }

    /**
     * Test case for vnfResume
     *
     * Resume the specified VNF.
     *
     */
    public function testVnfResume()
    {
    }

    /**
     * Test case for vnfSuspend
     *
     * Suspend the specified VNF.
     *
     */
    public function testVnfSuspend()
    {
    }

    /**
     * Test case for vnfendpointVnfuuid
     *
     * Get details of a specific VNF.
     *
     */
    public function testVnfendpointVnfuuid()
    {
    }
}
